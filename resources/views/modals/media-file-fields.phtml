<?php

/**
 * webtrees: online genealogy
 * Media folder import plugin
 *
 * Copyright (C) 2023 Romein van Buren
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

/**
 * This file contains code that is derived from webtrees
 * Copyright (C) 2023 webtrees development team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

use Fisharebest\Webtrees\Elements\SourceMediaType;
use Fisharebest\Webtrees\Http\RequestHandlers\AutoCompleteFolder;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\MediaFile;
use Fisharebest\Webtrees\Tree;

/**
 * @var string                   $max_upload_size
 * @var MediaFile|null           $media_file
 * @var array<int|string,string> $media_types
 * @var Tree                     $tree
 * @var array<string,string>     $unused_files
 * @var bool                     $is_admin
 */

// Default value for $is_admin
if (!isset($is_admin)) $is_admin = false;

?>

<div class="row mb-3 <?= $media_file instanceof MediaFile ? 'd-none' : '' ?>">
    <label class="col-form-label col-sm-2" for="file-location">
        <?= I18N::translate('Media file') ?>
    </label>
    <div class="col-sm-10">
        <select class="form-select" id="file-location" name="file_location">
            <option value="upload">
                <?= I18N::translate('A file on your computer') ?>
            </option>

            <?php if (!empty($unused_files)) : ?>
                <option value="unused">
                    <?= I18N::translate('A file on the server') ?>
                </option>
            <?php endif ?>

            <?php if ($is_admin) : ?>
                <option value="folder">
                    <?= I18N::translate('An entire folder on the server') ?>
                </option>
            <?php endif ?>

            <option value="url">
                <?= /* I18N: URL = web address */ I18N::translate('A URL') ?>
            </option>
        </select>

        <small class="text-muted d-none file-location file-location-folder">
            <?= I18N::translate('This will import all files in the specified folder.') ?>
            <?= I18N::translate('Subdirectories are not included.') ?>
            <?= I18N::translate('If an included file is already exists as a media object in your tree, it will be skipped to prevent double media objects.') ?>
        </small>
    </div>
</div>

<div class="row mb-3 file-location file-location-upload <?= $media_file instanceof MediaFile ? 'd-none' : '' ?>">
    <label class="col-form-label col-sm-2" for="file">
        <?= I18N::translate('A file on your computer') ?>
    </label>
    <div class="col-sm-10">
        <input class="form-control" id="file" name="file" type="file">
        <small class="text-muted">
            <?= I18N::translate('Maximum upload size: ') ?>
            <?= $max_upload_size ?>
        </small>
    </div>
</div>

<div class="row mb-3 file-location file-location-upload <?= $media_file instanceof MediaFile && $media_file->isExternal() ? 'd-none' : '' ?>">
    <label class="col-form-label col-sm-2" for="folder">
        <?= I18N::translate('Filename on server') ?>
    </label>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-6">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="auto" id="filename-manual" value="0" checked>
                    <label class="form-check-label input-group" for="filename-manual">
                        <input class="form-control folder-input" name="folder" placeholder="<?= I18N::translate('Folder') ?>" type="text" value="<?= e(dirname($media_file instanceof MediaFile ? $media_file->filename() : '') === '.' ? '' : dirname($media_file instanceof MediaFile ? $media_file->filename() : '')) ?>" data-wt-autocomplete-url="<?= e(route(AutoCompleteFolder::class, ['tree' => $tree->name()])) ?>" autocomplete="off">
                        <span class="input-group-text">/</span>
                    </label>
                </div>
            </div>
            <div class="col-sm-6">
                <input aria-label="<?= I18N::translate('Filename') ?>" class="form-control" name="new_file" type="text" placeholder="<?= I18N::translate('Same as uploaded file') ?>" value="<?= e(basename($media_file ? $media_file->filename() : '')) ?>">
            </div>
        </div>
        <div class="form-text">
            <?= I18N::translate('If you have a large number of media files, you can organize them into folders and subfolders.') ?>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="auto" id="filename-auto" value="1">
            <label class="form-check-label" for="filename-auto">
                <?= I18N::translate('Create a unique filename') ?>
            </label>
        </div>
    </div>
</div>

<div class="row mb-3 file-location file-location-folder d-none">
    <label class="col-form-label col-sm-2" for="folder">
        <?= I18N::translate('Folder name on server') ?>
    </label>
    <div class="col-sm-10">
        <input class="form-control folder-input" name="folder" placeholder="<?= I18N::translate('Folder') ?>" type="text" data-wt-autocomplete-url="<?= e(route(AutoCompleteFolder::class, ['tree' => $tree->name()])) ?>" autocomplete="off">
    </div>
</div>

<div class="row file-location file-location-unused d-none">
    <label class="col-form-label col-sm-2" for="unused">
        <?= I18N::translate('A file on the server') ?>
    </label>
    <div class="col-sm-10">
        <?= view('components/select', ['name' => 'unused', 'selected' => '', 'options' => $unused_files]) ?>
        <small class="text-muted">
        </small>
    </div>
</div>

<div class="row mb-3 file-location file-location-url <?= $media_file && $media_file->isExternal() ? '' : 'd-none' ?>">
    <label class="col-form-label col-sm-2" for="remote">
        <?= I18N::translate('URL') ?>
    </label>
    <div class="col-sm-10">
        <input class="form-control" type="url" id="remote" name="remote" placeholder="https://www.example.com/photo.jpeg" value="<?= e($media_file && $media_file->isExternal() ? $media_file->filename() : '') ?>">
    </div>
</div>

<div class="row mb-3">
    <label class="col-form-label col-sm-2" for="title">
        <?= I18N::translate('Title') ?>
    </label>
    <div class="col-sm-10">
        <input class="form-control" id="title" name="title" type="text" value="<?= e($media_file ? $media_file->title() : '') ?>">
        <small class="text-muted d-none file-location file-location-folder">
            <?= I18N::translate('How to create distinct names for media files:', '<code>{index}</code>') ?>
            <ul>
                <li><?= I18N::translate('%s is replaced with the index of the file (e.g. 1).', '<code>{index}</code>') ?></li>
                <li><?= I18N::translate('%s is replaced with a counter (e.g. 000001).', '<code>{counter}</code>') ?></li>
                <li><?= I18N::translate('%s is replaced with the base name of the file (e.g. photo.jpg).', '<code>{basename}</code>') ?></li>
                <li><?= I18N::translate('%s is replaced with the name of the file (e.g. photo).', '<code>{filename}</code>') ?></li>
            </ul>
        </small>
    </div>
</div>

<div class="row mb-3">
    <label class="col-form-label col-sm-2" for="type">
        <?= I18N::translate('Media type') ?>
    </label>
    <div class="col-sm-10">
        <?= (new SourceMediaType(''))->edit('type', 'type', $media_file ? $media_file->type() : '', $tree) ?>
    </div>
</div>

<script>
    webtrees.autocomplete('.folder-input');
    document.getElementById('file-location').addEventListener('change', function () {
        document.querySelectorAll('.file-location').forEach((e) => e.classList.add('d-none'));
        document.querySelectorAll('.file-location-' + this.value).forEach((e) => e.classList.remove('d-none'));
    });
</script>
